// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  main

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( DBVerfiy ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* DBVerfiy ) UnmarshalJSON([]byte) error { return nil }
func ( DBVerfiy ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* DBVerfiy ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_DBVerfiy *DBVerfiy

func ( DockerVerfiy ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* DockerVerfiy ) UnmarshalJSON([]byte) error { return nil }
func ( DockerVerfiy ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* DockerVerfiy ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_DockerVerfiy *DockerVerfiy

func ( LDAPVerfiy ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* LDAPVerfiy ) UnmarshalJSON([]byte) error { return nil }
func ( LDAPVerfiy ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* LDAPVerfiy ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_LDAPVerfiy *LDAPVerfiy

func ( Response ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Response ) UnmarshalJSON([]byte) error { return nil }
func ( Response ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Response ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Response *Response
